Đặc điểm Map Interface
    Lưu trữ theo cặp key-value: mỗi key duy nhất, value có thể trùng lặp.
    Truy cập theo key: nhanh chóng lấy value từ key.
    Không triển khai Collection (Map là một interface riêng).
    Các phương thức chính:
        put(K key, V value) – thêm hoặc cập nhật key-value
        get(Object key) – lấy value theo key
        remove(Object key) – xóa entry theo key
        containsKey(Object key) / containsValue(Object value)
        keySet(), values(), entrySet() – duyệt keys, values, entries

Các class triển khai Map Interface
| Class                 | Đặc điểm chính                                                                                                          | Khi dùng chính                                                       |
| --------------------- | ------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------- |
| **HashMap**           | - Không bảo đảm thứ tự key.<br>- Truy cập, thêm, xóa nhanh O(1) trung bình.<br>-                  | Khi **thứ tự key không quan trọng**, cần hiệu năng cao.              |
| **LinkedHashMap**     | - Bảo toàn **thứ tự chèn** hoặc **thứ tự truy cập**.<br>- Tốt cho LRU cache.<br>-                 | Khi cần **duy trì thứ tự chèn hoặc thứ tự truy cập**, hiệu năng tốt. |
| **TreeMap**           | - Tự động **sắp xếp key** theo thứ tự tự nhiên hoặc Comparator.<br>- Thêm/xóa/tìm kiếm O(log n).  | Khi cần Map **duy nhất theo thứ tự key**, muốn sắp xếp tự động.      |
| **Hashtable**         | - Phiên bản cũ, **đồng bộ (synchronized)**.<br>-                                                  | Khi code cũ cần **thread-safe**, hiện nay ít dùng.                   |
| **ConcurrentHashMap** | - Map **thread-safe**, truy cập đồng thời.<br>- Hiệu năng tốt khi nhiều thread thao tác Map.                            | Khi nhiều thread thao tác **đọc/ghi đồng thời**.                     |
| **WeakHashMap**       | - Key được giữ bằng **weak reference**, entry tự xóa khi key không còn tham chiếu mạnh.<br>-      | Khi muốn **cache tạm thời**, key tự xóa → tránh memory leak.         |


Khi bạn put(key, value) vào HashMap:
    HashMap tính hash(key) → ra số nguyên.
    Tính index = hash & (capacity - 1) → tìm ra bucket số index trong mảng table.
    Lưu (key, value) vào bucket đó.
    Nếu đã có dữ liệu trong bucket:
    Nếu key giống nhau → ghi đè value.
    Nếu key khác nhau → cả hai cặp được giữ trong cùng bucket (trong 1 LinkedList hoặc Tree).
